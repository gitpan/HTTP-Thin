.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Dist::Zilla::Stash::PodWeaver 3"
.TH Dist::Zilla::Stash::PodWeaver 3 "2012-12-08" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Dist::Zilla::Stash::PodWeaver \- A stash of config options for Pod::Weaver
.SH "VERSION"
.IX Header "VERSION"
version 1.005
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  # dist.ini
\&
\&  [@YourFavoritePluginBundle]
\&
\&  [%PodWeaver]
\&  \-StopWords.include = WordsIUse ThatAreNotWords
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This performs the Dist::Zilla::Role::Stash role
(using Dist::Zilla::Role::DynamicConfig
and    Dist::Zilla::Role::Stash::Plugins).
.PP
When using Dist::Zilla::Plugin::PodWeaver
with a \fIconfig_plugin\fR it's difficult to pass more
configuration options to Pod::Weaver plugins.
.PP
This is often the case when using a
Dist::Zilla::PluginBundle
that uses a
Pod::Weaver::PluginBundle.
.PP
This stash is intended to allow you to set other options in your \fIdist.ini\fR
that can be accessed by Pod::Weaver plugins.
.PP
Because you know how you like your dists built,
(and you're using PluginBundles to do it)
but you need a little extra customization.
.SH "USAGE"
.IX Header "USAGE"
The attributes should be separated from the plugin name with a dot:
\&\f(CW\*(C`PluginName.attributes\*(C'\fR.
The PluginName will be passed to
\&\f(CW\*(C`Pod::Weaver::Config::Assembler\->expand_package()\*(C'\fR
so the PluginName should include the leading character
to identify its type:
.IP "\(bu" 4
\&\f(CW\*(C`\*(C'\fR (no character) (Pod::Weaver::Section::\fIName\fR)
.IP "\(bu" 4
\&\f(CW\*(C`\-\*(C'\fR Plugin (Pod::Weaver::Plugin::\fIName\fR)
.IP "\(bu" 4
\&\f(CW\*(C`@\*(C'\fR Bundle (Pod::Weaver::PluginBundle::\fIName\fR)
.IP "\(bu" 4
\&\f(CW\*(C`+\*(C'\fR Full Package Name (\fIName\fR)
.Sp
An ini config line cannot start with an \fI = \fR
so this module will convert any lines that start with \fI + \fR to \fI = \fR.
.PP
For example
.PP
.Vb 1
\&  Complaints.use_fake_email = 1
.Ve
.PP
Would set the 'use_fake_email' attribute to '1'
for the [fictional] \fIPod::Weaver::Section::Complaints\fR plugin.
.PP
.Vb 1
\&  \-StopWords.include = Flibberoloo
.Ve
.PP
Would add 'Flibberoloo' to the list of stopwords
added by the Pod::Weaver::Plugin::StopWords plugin.
.PP
.Vb 1
\&  +Some::Other::Module.silly = 1
.Ve
.PP
Would set the 'silly' flag to true on \fISome::Other::Module\fR.
.SH "METHODS"
.IX Header "METHODS"
.SS "expand_package"
.IX Subsection "expand_package"
Expand shortened package monikers to the full package name.
.PP
Changes leading \fI+\fR to \fI=\fR and then passes the value to
\&\fIexpand_package\fR in Pod::Weaver::Config::Assembler.
.PP
See \*(L"\s-1USAGE\*(R"\s0 for a description.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
.IP "\(bu" 4
Arguments can only be specified in a \fIdist.ini\fR stash once,
even if the plugin would normally allow multiple entries
in a \fIweaver.ini\fR.  Since the arguments are dynamic (unknown to the class)
the class cannot specify which arguments should accept multiple values.
.Sp
To work around this you can add brackets (and subscripts)
to config lines to specify that an attribute is an array:
.Sp
.Vb 2
\&  Plugin.attr[0] = first
\&  Plugin.attr[1] = second
.Ve
.Sp
See \*(L"\s-1CONFIGURATION SYNTAX\*(R"\s0 in Config::MVP::Slicer for more information.
.IP "\(bu" 4
Including the package name gives the options a namespace
(instead of trying to set the \fIinclude\fR attribute for 2 different plugins).
.Sp
Unfortunately this does not automatically set the options on the plugins.
The plugins need to know to use this stash.
.Sp
So if you'd like to be able to use this stash with a Pod::Weaver
plugin that doesn't support it, please contact that plugin's author(s)
and let them know about this module.
.Sp
If you are a Pod::Weaver plugin author,
have a look at
\&\*(L"get_stashed_config\*(R" in Dist::Zilla::Role::Stash::Plugins and
\&\*(L"merge_stashed_config\*(R" in Dist::Zilla::Role::Stash::Plugins
to see easy ways to get values from this stash.
.Sp
Please contact me (and/or send patches) if something doesn't work
like you think it should.
.SH "SUPPORT"
.IX Header "SUPPORT"
.SS "Perldoc"
.IX Subsection "Perldoc"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&  perldoc Dist::Zilla::Stash::PodWeaver
.Ve
.SS "Websites"
.IX Subsection "Websites"
The following websites have more information about this module, and may be of help to you. As always,
in addition to those websites please use your favorite search engine to discover more resources.
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
The default \s-1CPAN\s0 search engine, useful to view \s-1POD\s0 in \s-1HTML\s0 format.
.Sp
<http://search.cpan.org/dist/Dist\-Zilla\-Stash\-PodWeaver>
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's Bug Tracker
.Sp
The \s-1RT \s0( Request Tracker ) website is the default bug/issue tracking system for \s-1CPAN.\s0
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Dist\-Zilla\-Stash\-PodWeaver>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
The \s-1CPAN\s0 Ratings is a website that allows community ratings and reviews of Perl modules.
.Sp
<http://cpanratings.perl.org/d/Dist\-Zilla\-Stash\-PodWeaver>
.IP "\(bu" 4
\&\s-1CPAN\s0 Testers
.Sp
The \s-1CPAN\s0 Testers is a network of smokers who run automated tests on uploaded \s-1CPAN\s0 distributions.
.Sp
<http://www.cpantesters.org/distro/D/Dist\-Zilla\-Stash\-PodWeaver>
.IP "\(bu" 4
\&\s-1CPAN\s0 Testers Matrix
.Sp
The \s-1CPAN\s0 Testers Matrix is a website that provides a visual overview of the test results for a distribution on various Perls/platforms.
.Sp
<http://matrix.cpantesters.org/?dist=Dist\-Zilla\-Stash\-PodWeaver>
.IP "\(bu" 4
\&\s-1CPAN\s0 Testers Dependencies
.Sp
The \s-1CPAN\s0 Testers Dependencies is a website that shows a chart of the test results of all dependencies for a distribution.
.Sp
<http://deps.cpantesters.org/?module=Dist::Zilla::Stash::PodWeaver>
.SS "Bugs / Feature Requests"
.IX Subsection "Bugs / Feature Requests"
Please report any bugs or feature requests by email to \f(CW\*(C`bug\-dist\-zilla\-stash\-podweaver at rt.cpan.org\*(C'\fR, or through
the web interface at <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Dist\-Zilla\-Stash\-PodWeaver>. You will be automatically notified of any
progress on the request by the system.
.SS "Source Code"
.IX Subsection "Source Code"
<https://github.com/rwstauner/Dist\-Zilla\-Stash\-PodWeaver>
.PP
.Vb 1
\&  git clone https://github.com/rwstauner/Dist\-Zilla\-Stash\-PodWeaver.git
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Randy Stauner <rwstauner@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2010 by Randy Stauner.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
