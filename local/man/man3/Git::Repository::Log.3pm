.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Git::Repository::Log 3"
.TH Git::Repository::Log 3 "2013-11-05" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Git::Repository::Log \- Class representing git log data
.SH "VERSION"
.IX Header "VERSION"
version 1.310
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    # load the Log plugin
\&    use Git::Repository \*(AqLog\*(Aq;
\&
\&    # get the log for last commit
\&    my ($log) = Git::Repository\->log( \*(Aq\-1\*(Aq );
\&
\&    # get the author\*(Aqs email
\&    print my $email = $log\->author_email;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Git::Repository::Log is a class whose instances reprensent
log items from a \fBgit log\fR stream.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
This method shouldn't be used directly. Git::Repository::Log::Iterator
should be the preferred way to create Git::Repository::Log objects.
.ie n .SS "new( @args )"
.el .SS "new( \f(CW@args\fP )"
.IX Subsection "new( @args )"
Create a new Git::Repository::Log instance, using the list of key/values
passed as parameters. The supported keys are (from the output of
\&\f(CW\*(C`git log \-\-pretty=raw\*(C'\fR):
.IP "commit" 4
.IX Item "commit"
The commit id (ignoring the extra information added by \fI\-\-decorate\fR).
.IP "tree" 4
.IX Item "tree"
The tree id.
.IP "parent" 4
.IX Item "parent"
The parent list, separated by spaces.
.IP "author" 4
.IX Item "author"
The author information.
.IP "committer" 4
.IX Item "committer"
The committer information.
.IP "message" 4
.IX Item "message"
The log message (including the 4\-space indent normally output by \fBgit log\fR).
.IP "gpgsig" 4
.IX Item "gpgsig"
The commit signature.
.IP "mergetag" 4
.IX Item "mergetag"
The mergetag information.
.IP "extra" 4
.IX Item "extra"
Any extra text that might be added by extra options passed to \fBgit log\fR.
.PP
Note that since \f(CW\*(C`git tag \-\-pretty=raw\*(C'\fR does not provide the \f(CW\*(C`encoding\*(C'\fR
header (and provides the message properly decoded), this information
will not be available via Git::Repository::Plugin::Log.
.SH "ACCESSORS"
.IX Header "ACCESSORS"
The following accessors methods are recognized. They all return scalars,
except for \f(CW\*(C`parent()\*(C'\fR, which returns a list.
.SS "Commit information"
.IX Subsection "Commit information"
.IP "commit" 4
.IX Item "commit"
.PD 0
.IP "tree" 4
.IX Item "tree"
.IP "parent" 4
.IX Item "parent"
.PD
.SS "Author and committer information"
.IX Subsection "Author and committer information"
.IP "author" 4
.IX Item "author"
.PD 0
.IP "committer" 4
.IX Item "committer"
.PD
The original author/committer line
.IP "author_name" 4
.IX Item "author_name"
.PD 0
.IP "committer_name" 4
.IX Item "committer_name"
.IP "author_email" 4
.IX Item "author_email"
.IP "committer_email" 4
.IX Item "committer_email"
.PD
.SS "Date information"
.IX Subsection "Date information"
.IP "author_gmtime" 4
.IX Item "author_gmtime"
.PD 0
.IP "committer_gmtime" 4
.IX Item "committer_gmtime"
.IP "author_localtime" 4
.IX Item "author_localtime"
.IP "committer_localtime" 4
.IX Item "committer_localtime"
.IP "author_tz" 4
.IX Item "author_tz"
.IP "committer_tz" 4
.IX Item "committer_tz"
.PD
.SS "Log information"
.IX Subsection "Log information"
.IP "raw_message" 4
.IX Item "raw_message"
The log message with the 4\-space indent output by \fBgit log\fR.
.IP "message" 4
.IX Item "message"
The unindented version of the log message.
.IP "subject" 4
.IX Item "subject"
.PD 0
.IP "body" 4
.IX Item "body"
.PD
.SS "Signature-related information"
.IX Subsection "Signature-related information"
.IP "gpgsig" 4
.IX Item "gpgsig"
.PD 0
.IP "mergetag" 4
.IX Item "mergetag"
.PD
.SS "Extra information"
.IX Subsection "Extra information"
.IP "extra" 4
.IX Item "extra"
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests on the bugtracker website
http://rt.cpan.org/NoAuth/Bugs.html?Dist=Git\-Repository\-Plugin\-Log or by
email to bug\-git\-repository\-plugin\-log@rt.cpan.org.
.PP
When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.
.SH "AUTHOR"
.IX Header "AUTHOR"
Philippe Bruhat (BooK) <book@cpan.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010\-2013 Philippe Bruhat (BooK), all rights reserved.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
