.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Dist::Zilla::Plugin::ContributorsFromGit 3"
.TH Dist::Zilla::Plugin::ContributorsFromGit 3 "2014-04-17" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Dist::Zilla::Plugin::ContributorsFromGit \- Populate your 'CONTRIBUTORS' POD from the list of git authors
.SH "VERSION"
.IX Header "VERSION"
This document describes version 0.013 of Dist::Zilla::Plugin::ContributorsFromGit \- released April 17, 2014 as part of Dist-Zilla-Plugin-ContributorsFromGit.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    ; in your dist.ini
\&    [ContributorsFromGit]
\&
\&    ; in your weaver.ini
\&    [Contributors]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This plugin makes it easy to acknowledge the contributions of others by
populating a \f(CW%PodWeaver\fR stash with the unique
list of all git commit authors reachable from the current \s-1HEAD.\s0
.SH "OVERVIEW"
.IX Header "OVERVIEW"
On collecting the unique list of reachable commit authors from git, we search
and remove any git authors from the list of authors Dist::Zilla knows
about.  We then look for a stash named \f(CW%PodWeaver\fR; if we don't find one
then we create an instance of Dist::Zilla::Stash::PodWeaver and register it
with our zilla instance.  Then we add the list of contributors (the filtered
git authors list) to the stash in such a way that
Pod::Weaver::Section::Contributors can find them.
.PP
Note that you do not need to have the \f(CW%PodWeaver\fR stash created; it will be
added if it is not found.  However, your Pod::Weaver config (aka
c<weaver.ini>) must include the
Contributors section plugin.
.SS "Dist::Zilla Phase"
.IX Subsection "Dist::Zilla Phase"
This plugin runs during the BeforeBuild
phase.
.SS "Metadata Keys"
.IX Subsection "Metadata Keys"
The list of contributors is also added to distribution metadata under the custom
\&\f(CW\*(C`x_contributors\*(C'\fR key.  (e.g. in \f(CW\*(C`META.yml\*(C'\fR, \f(CW\*(C`META.json\*(C'\fR, etc)
.PP
If you have duplicate contributors because of differences in committer name
or email you can use a \f(CW\*(C`.mailmap\*(C'\fR file to canonicalize contributor names
and emails.  See git help shortlog for details.
.SS "Pod::Weaver::Section::Contributors is \s-1OPTIONAL\s0"
.IX Subsection "Pod::Weaver::Section::Contributors is OPTIONAL"
Note that using the Pod::Weaver::Section::Contributors section is in no way
mandated or necessitated by this package; if you wish to use it you must
include the Contributors section in your Pod::Weaver configuration in the
traditional fashion.
.SH "METACPAN CONTRIBUTOR MATCHING"
.IX Header "METACPAN CONTRIBUTOR MATCHING"
MetaCPAN <http://metacpan.org> will attempt to match a contributor address
back to a \s-1PAUSE\s0 account.  However, it (currently) can only do that if the
contributor's email address is their \f(CW\*(C`PAUSEID@cpan.org\*(C'\fR address.  There are
two mechanisms for helping to resolve this, if your commits are not using this
address.
.PP
Both of these approaches have pros and cons that have been discussed at
levels nearing the heat brought to any discussion of religion, homosexuality,
or Chief O'Brien's actual rank at any \s-1ST:TNG\s0 convention.  However, they both
have the advantage of *working*, and through different modes of action.  You
are free to use one, both or neither.  These are only important if you're not
committing with your \f(CW\*(C`@cpan.org\*(C'\fR email address \fBand\fR want the MetaCPAN to
link to your author page from the page of the package you contributed to.
.SS "Using a .mailmap file"
.IX Subsection "Using a .mailmap file"
See \f(CW\*(C`git help shortlog\*(C'\fR for help on how to use this.  A \f(CW\*(C`.mailmap\*(C'\fR file must
be maintained in each repository using it.
.SS "Globally, via the authors mapping"
.IX Subsection "Globally, via the authors mapping"
This package contains a \s-1YAML\s0 file containing a mapping of \f(CW\*(C`@cpan.org\*(C'\fR author
addresses; this list is consulted while building the contributors list, and
can be used to replace a non\-cpan.org address with one.
.PP
To add to or modify this mapping, please feel free to fork, add your alternate
email addresses to \f(CW\*(C`share/author\-emails.yaml\*(C'\fR, and submit a pull-request for
inclusion.  It'll be merged and released; as various authors update their set
of installed modules and cut new releases, the mapping will appear.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Please see those modules/websites for more information related to this module.
.IP "\(bu" 4
Pod::Weaver::Section::Contributors
.IP "\(bu" 4
Dist::Zilla::Stash::PodWeaver
.IP "\(bu" 4
<http://www.dagolden.com/index.php/1921/how\-im\-using\-distzilla\-to\-give\-credit\-to\-contributors/>
.SH "SOURCE"
.IX Header "SOURCE"
The development version is on github at <http://https://github.com/RsrchBoy/Dist\-Zilla\-Plugin\-ContributorsFromGit>
and may be cloned from <git://https://github.com/RsrchBoy/Dist\-Zilla\-Plugin\-ContributorsFromGit.git>
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests on the bugtracker website
https://github.com/RsrchBoy/Dist\-Zilla\-Plugin\-ContributorsFromGit/issues
.PP
When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Weyl <cweyl@alumni.drew.edu>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
Brendan Byrd <Perl@ResonatorSoft.org>
.IP "\(bu" 4
David Golden <dagolden@cpan.org>
.IP "\(bu" 4
Graham Knop <haarg@haarg.org>
.IP "\(bu" 4
Randy Stauner <randy@magnificent\-tears.com>
.IP "\(bu" 4
Tatsuhiko Miyagawa <miyagawa@bulknews.net>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2012 by Chris Weyl.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The GNU Lesser General Public License, Version 2.1, February 1999
.Ve
