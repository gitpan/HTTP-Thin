.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Pod::Weaver::Section::Contributors 3"
.TH Pod::Weaver::Section::Contributors 3 "2013-12-12" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Pod::Weaver::Section::Contributors \- a section listing contributors
.SH "VERSION"
.IX Header "VERSION"
version 0.007
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
on dist.ini:
.PP
.Vb 5
\&    [PodWeaver]
\&    [%PodWeaver]
\&    Contributors.head = 2
\&    Contributors.contributors[0] = keedi \- Keedi Kim \- XXX (cpan: KEEDI) <keedi@cpan.org>
\&    Contributors.contributors[1] = carandraug \- Carne\*: Draug (cpan: CDRAUG) <cdraug@cpan.org>
.Ve
.PP
and/or weaver.ini:
.PP
.Vb 4
\&    [Contributors]
\&    head = 2
\&    contributors = keedi \- Keedi Kim \- XXX (cpan: KEEDI) <keedi@cpan.org>
\&    contributors = carandraug \- Carne\*: Draug (cpan: CDRAUG) <cdraug@cpan.org>
.Ve
.PP
and/or in the source of individual files:
.PP
.Vb 2
\&    # CONTRIBUTOR:  keedi \- Keedi Kim \- XXX (cpan: KEEDI) <keedi@cpan.org>
\&    # CONTRIBUTORS: carandraug \- Carne\*: Draug (cpan: CDRAUG) <cdraug@cpan.org>
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This section adds a listing of the documents contributors.  It expects a \f(CW\*(C`contributors\*(C'\fR
input parameter to be an arrayref of strings.  If no \f(CW\*(C`contributors\*(C'\fR parameter is
given, it will do nothing.  Otherwise, it produces a hunk like this:
.PP
.Vb 1
\&    =head1 CONTRIBUTORS
\&
\&    Contributor One <a1@example.com>
\&    Contributor Two <a2@example.com>
.Ve
.PP
To support distributions with multiple modules, it is also able to derive a list
of contributors in a file basis by looking at comments on each module. Names of
contributors on the source, will only appear on the \s-1POD\s0 of those modules.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "head"
.IX Subsection "head"
The heading level of this section.  If 0, it inserts an ordinary piece of text
with no heading. Defaults to 1.
.PP
In case the value is passed both to Pod::Weaver and to the Pod::Weaver stash,
it uses the value found in the stash.
.SS "contributors"
.IX Subsection "contributors"
The list of contributors.
.PP
In case the value is passed to \f(CW\*(C`weave_section()\*(C'\fR, to Pod::Weaver
and to the Pod::Weaver stash, it merges all contributors.
.SS "all_modules"
.IX Subsection "all_modules"
Enable this if you want to add the \s-1CONTRIBUTOR/CONTRIBUTORS\s0 section to
all the modules in a dist, not only the main one. Defaults to false.
.PP
In case the value is passed both to Pod::Weaver and to the Pod::Weaver stash,
it uses the value found in the stash.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 4
dagolden's 'How I'm using Dist::Zilla to give credit to contributors' <http://www.dagolden.com/index.php/1921/how-im-using-distzilla-to-give-credit-to-contributors/>
.IP "\(bu" 4
Dist::Zilla::Plugin::ContributorsFromGit
.IP "\(bu" 4
Dist::Zilla::Stash::Contributors
.IP "\(bu" 4
Dist::Zilla::Plugin::Meta::Contributors
.IP "\(bu" 4
Dist::Zilla::Plugin::ContributorsFile
.IP "\(bu" 4
Dist::Zilla
.IP "\(bu" 4
Dist::Zilla::Role::Stash::Plugins
.IP "\(bu" 4
Pod::Weaver
.IP "\(bu" 4
Pod::Weaver::Section::Authors
.SH "AUTHOR"
.IX Header "AUTHOR"
Keedi Kim \- \s-1XXX\s0 <keedi@cpan.org>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
carandraug \- Carne\*: Draug (cpan: \s-1CDRAUG\s0) <cdraug@cpan.org>
.IP "\(bu" 4
ether \- Karen Etheridge (cpan: \s-1ETHER\s0) <ether@cpan.org>
.IP "\(bu" 4
thaljef \- Jeffrey Ryan Thalhammer (cpan: \s-1THALJEF\s0) <thaljef@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2013 by Keedi Kim.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
